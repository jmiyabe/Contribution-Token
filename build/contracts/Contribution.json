{
  "contractName": "Contribution",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Token",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountEther",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "donateEtherEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "donateEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEther\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"donateEtherEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donateEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Juliano Miyabe\",\"kind\":\"dev\",\"methods\":{\"donateEther()\":{\"details\":\"this function will donate ethereum and will mint token to the donator.\"},\"getUserAmount(address)\":{\"details\":\"this function will return the amount of tokens accondingly to the address\",\"params\":{\"userAddress\":\"is the donator address\"}}},\"title\":\"Contribution contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is used for donate ETH \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Contribution.sol\":\"Contribution\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Contribution.sol\":{\"keccak256\":\"0xbe6c26e68ccf7b3ca6750e898837a8cdf01e4129965716fe94148d255e2dfe78\",\"urls\":[\"bzz-raw://584776ee73a5f845c08f3f615f3f9b6437192fd3c2dea90388671495610ffc47\",\"dweb:/ipfs/QmXMiRHC2eypkzss6NLcENNWqATm5fhjbPthtKyranKXdn\"]},\"/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Token.sol\":{\"keccak256\":\"0xd1283eab779f2c90246861ab5b919e2e1e4ea6e5b71ecea1600b35294fa740fd\",\"urls\":[\"bzz-raw://40b1e018dcc62c067255f0c9ab0cb9a81605119491cbccc4a5e52996c3efe29f\",\"dweb:/ipfs/QmPGjt6MQKHAN6Jx7X2oKqiVs5ojWDdWJVMyA8QxmXoaxn\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161056e38038061056e8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506104da806100946000396000f3fe6080604052600436106100345760003560e01c8063327a943a146100395780637031fcbe1461009e578063863451dd14610103575b600080fd5b34801561004557600080fd5b506100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061010d565b6040518082815260200191505060405180910390f35b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610156565b6040518082815260200191505060405180910390f35b61010b61016e565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b600034116101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806104826023913960400191505060405180910390fd5b61021934600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103f990919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050506040513d602081101561031757600080fd5b810190808051906020019092919050505061039a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f536f6d657468696e672077656e742077726f6e6700000000000000000000000081525060200191505060405180910390fd5b7ffda273d99b25c4c6a31f988148bcb951311e7bbd0f8e07f84266e9677885c747333434604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1565b600080828401905083811015610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe506c6561736520646f6e61746520612076616c696420616d6f756e74206f6620455448a26469706673582212203e42d9108073192b7f20f59db567ec5e0096083779621c896bd6da1cd16ee73664736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c8063327a943a146100395780637031fcbe1461009e578063863451dd14610103575b600080fd5b34801561004557600080fd5b506100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061010d565b6040518082815260200191505060405180910390f35b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610156565b6040518082815260200191505060405180910390f35b61010b61016e565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b600034116101c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806104826023913960400191505060405180910390fd5b61021934600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103f990919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156102ed57600080fd5b505af1158015610301573d6000803e3d6000fd5b505050506040513d602081101561031757600080fd5b810190808051906020019092919050505061039a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f536f6d657468696e672077656e742077726f6e6700000000000000000000000081525060200191505060405180910390fd5b7ffda273d99b25c4c6a31f988148bcb951311e7bbd0f8e07f84266e9677885c747333434604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1565b600080828401905083811015610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe506c6561736520646f6e61746520612076616c696420616d6f756e74206f6620455448a26469706673582212203e42d9108073192b7f20f59db567ec5e0096083779621c896bd6da1cd16ee73664736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "218:954:0:-:0;;;434:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:6;470:5;;:14;;;;;;;;;;;;;;;;;;434:57;218:954;;;;;;",
  "deployedSourceMap": "218:954:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;383:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;580:327;;;:::i;:::-;;1052:118;1116:7;1141:9;:22;1151:11;1141:22;;;;;;;;;;;;;;;;1134:29;;1052:118;;;:::o;383:44::-;;;;;;;;;;;;;;;;;:::o;580:327::-;648:1;636:9;:13;628:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;723:36;749:9;723;:21;733:10;723:21;;;;;;;;;;;;;;;;:25;;:36;;;;:::i;:::-;699:9;:21;709:10;699:21;;;;;;;;;;;;;;;:60;;;;777:5;;;;;;;;;;:10;;;788;800:9;777:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:50;867:10;879:9;890;850:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:327::o;2690:175:3:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o",
  "source": "pragma solidity >=0.6.0 <0.8.0;\n\nimport './Token.sol';\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\n/// @title Contribution contract\n/// @author Juliano Miyabe\n/// @notice This contract is used for donate ETH \ncontract Contribution {\n    using SafeMath for uint256;\n    event donateEtherEvent(address userAddress, uint amountEther, uint tokens);\n    Token private token;\n    mapping(address => uint256) public userEther;\n\n    constructor(Token _token) {\n        token = _token;\n    }\n\n    ///@dev this function will donate ethereum and will mint token to the donator.\n    function donateEther() payable public {\n        require(msg.value > 0 ,\"Please donate a valid amount of ETH\");\n        userEther[msg.sender] = userEther[msg.sender].add(msg.value);\n        require(token.mint(msg.sender, msg.value), \"Something went wrong\");\n        emit donateEtherEvent(msg.sender, msg.value, msg.value);\n    }\n    \n    ///@dev this function will return the amount of tokens accondingly to the address\n    ///@param userAddress is the donator address\n    function getUserAmount(address userAddress) public view returns(uint256){\n        return userEther[userAddress];\n    }\n}",
  "sourcePath": "/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Contribution.sol",
  "ast": {
    "absolutePath": "/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Contribution.sol",
    "exportedSymbols": {
      "Context": [
        1184
      ],
      "Contribution": [
        92
      ],
      "ERC20": [
        1083
      ],
      "IERC20": [
        1161
      ],
      "SafeMath": [
        580
      ],
      "Token": [
        225
      ]
    },
    "id": 93,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 226,
        "src": "33:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 581,
        "src": "55:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "108:110:0",
          "text": "@title Contribution contract\n @author Juliano Miyabe\n @notice This contract is used for donate ETH "
        },
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92
        ],
        "name": "Contribution",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7,
            "libraryName": {
              "id": 5,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 580,
              "src": "252:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$580",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "246:27:0",
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "265:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 15,
            "name": "donateEtherEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "301:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountEther",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "322:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "340:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "300:52:0"
            },
            "src": "278:75:0"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "358:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$225",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 16,
              "name": "Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 225,
              "src": "358:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$225",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7031fcbe",
            "id": 21,
            "mutability": "mutable",
            "name": "userEther",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "383:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "391:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "383:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 19,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "402:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "460:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "470:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$225",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "478:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$225",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "470:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$225",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "470:14:0"
                }
              ]
            },
            "id": 31,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "446:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Token_$225",
                    "typeString": "contract Token"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 225,
                    "src": "446:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$225",
                      "typeString": "contract Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:14:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:0:0"
            },
            "scope": 92,
            "src": "434:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "618:289:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "636:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "636:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "636:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c6561736520646f6e61746520612076616c696420616d6f756e74206f6620455448",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "651:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a8bf4b02367948df381b0bbbdeb4071a9e5d8a316bd03644ca6787a522b4361",
                          "typeString": "literal_string \"Please donate a valid amount of ETH\""
                        },
                        "value": "Please donate a valid amount of ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a8bf4b02367948df381b0bbbdeb4071a9e5d8a316bd03644ca6787a522b4361",
                          "typeString": "literal_string \"Please donate a valid amount of ETH\""
                        }
                      ],
                      "id": 35,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "628:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "628:61:0"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43,
                        "name": "userEther",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "699:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 46,
                      "indexExpression": {
                        "expression": {
                          "id": 44,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "709:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "709:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "699:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "749:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "749:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 47,
                            "name": "userEther",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "723:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 50,
                          "indexExpression": {
                            "expression": {
                              "id": 48,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "733:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "733:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "723:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 407,
                        "src": "723:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "723:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "699:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "699:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "788:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "788:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "expression": {
                              "id": 62,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "800:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "800:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 58,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "777:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$225",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 207,
                          "src": "777:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "777:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f6d657468696e672077656e742077726f6e67",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "812:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3af8b818b46c896fba0b3573f74fefe12530644ad5b14765aea3311a82fcb598",
                          "typeString": "literal_string \"Something went wrong\""
                        },
                        "value": "Something went wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3af8b818b46c896fba0b3573f74fefe12530644ad5b14765aea3311a82fcb598",
                          "typeString": "literal_string \"Something went wrong\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "769:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "769:66:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "867:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "867:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "879:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "879:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 73,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "890:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "890:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "donateEtherEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "850:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "EmitStatement",
                  "src": "845:55:0"
                }
              ]
            },
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "497:78:0",
              "text": "@dev this function will donate ethereum and will mint token to the donator."
            },
            "functionSelector": "863451dd",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:0"
            },
            "scope": 92,
            "src": "580:327:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1124:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 86,
                      "name": "userEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1141:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88,
                    "indexExpression": {
                      "id": 87,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1151:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1141:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "1134:29:0"
                }
              ]
            },
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "917:130:0",
              "text": "@dev this function will return the amount of tokens accondingly to the address\n@param userAddress is the donator address"
            },
            "functionSelector": "327a943a",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1075:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:21:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1116:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:9:0"
            },
            "scope": 92,
            "src": "1052:118:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "218:954:0"
      }
    ],
    "src": "0:1172:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Contribution.sol",
      "exportedSymbols": {
        "Context": [
          1184
        ],
        "Contribution": [
          92
        ],
        "ERC20": [
          1083
        ],
        "IERC20": [
          1161
        ],
        "SafeMath": [
          580
        ],
        "Token": [
          225
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "attributes": {
          "SourceUnit": 226,
          "absolutePath": "/Users/i866712/workspace/Ethereum/wk/Contribution-Token/contracts/Token.sol",
          "file": "./Token.sol",
          "scope": 93,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "33:21:0"
      },
      {
        "attributes": {
          "SourceUnit": 581,
          "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
          "file": "@openzeppelin/contracts/math/SafeMath.sol",
          "scope": 93,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "55:51:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            92
          ],
          "name": "Contribution",
          "scope": 93
        },
        "children": [
          {
            "attributes": {
              "text": "@title Contribution contract\n @author Juliano Miyabe\n @notice This contract is used for donate ETH "
            },
            "id": 4,
            "name": "StructuredDocumentation",
            "src": "108:110:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 580,
                  "type": "library SafeMath"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "252:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 6,
                "name": "ElementaryTypeName",
                "src": "265:7:0"
              }
            ],
            "id": 7,
            "name": "UsingForDirective",
            "src": "246:27:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "donateEtherEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "scope": 15,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 8,
                        "name": "ElementaryTypeName",
                        "src": "301:7:0"
                      }
                    ],
                    "id": 9,
                    "name": "VariableDeclaration",
                    "src": "301:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amountEther",
                      "scope": 15,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "322:4:0"
                      }
                    ],
                    "id": 11,
                    "name": "VariableDeclaration",
                    "src": "322:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "tokens",
                      "scope": 15,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 12,
                        "name": "ElementaryTypeName",
                        "src": "340:4:0"
                      }
                    ],
                    "id": 13,
                    "name": "VariableDeclaration",
                    "src": "340:11:0"
                  }
                ],
                "id": 14,
                "name": "ParameterList",
                "src": "300:52:0"
              }
            ],
            "id": 15,
            "name": "EventDefinition",
            "src": "278:75:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "token",
              "scope": 92,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Token",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "Token",
                  "referencedDeclaration": 225,
                  "type": "contract Token"
                },
                "id": 16,
                "name": "UserDefinedTypeName",
                "src": "358:5:0"
              }
            ],
            "id": 17,
            "name": "VariableDeclaration",
            "src": "358:19:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7031fcbe",
              "mutability": "mutable",
              "name": "userEther",
              "scope": 92,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "391:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "402:7:0"
                  }
                ],
                "id": 20,
                "name": "Mapping",
                "src": "383:27:0"
              }
            ],
            "id": 21,
            "name": "VariableDeclaration",
            "src": "383:44:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 92,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token",
                      "scope": 31,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Token",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Token",
                          "referencedDeclaration": 225,
                          "type": "contract Token"
                        },
                        "id": 22,
                        "name": "UserDefinedTypeName",
                        "src": "446:5:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "446:12:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "445:14:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25,
                "name": "ParameterList",
                "src": "460:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Token"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17,
                              "type": "contract Token",
                              "value": "token"
                            },
                            "id": 26,
                            "name": "Identifier",
                            "src": "470:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 23,
                              "type": "contract Token",
                              "value": "_token"
                            },
                            "id": 27,
                            "name": "Identifier",
                            "src": "478:6:0"
                          }
                        ],
                        "id": 28,
                        "name": "Assignment",
                        "src": "470:14:0"
                      }
                    ],
                    "id": 29,
                    "name": "ExpressionStatement",
                    "src": "470:14:0"
                  }
                ],
                "id": 30,
                "name": "Block",
                "src": "460:31:0"
              }
            ],
            "id": 31,
            "name": "FunctionDefinition",
            "src": "434:57:0"
          },
          {
            "attributes": {
              "functionSelector": "863451dd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "donateEther",
              "scope": 92,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev this function will donate ethereum and will mint token to the donator."
                },
                "id": 32,
                "name": "StructuredDocumentation",
                "src": "497:78:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 33,
                "name": "ParameterList",
                "src": "600:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 34,
                "name": "ParameterList",
                "src": "618:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5a8bf4b02367948df381b0bbbdeb4071a9e5d8a316bd03644ca6787a522b4361",
                                  "typeString": "literal_string \"Please donate a valid amount of ETH\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 35,
                            "name": "Identifier",
                            "src": "628:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 36,
                                    "name": "Identifier",
                                    "src": "636:3:0"
                                  }
                                ],
                                "id": 37,
                                "name": "MemberAccess",
                                "src": "636:9:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 38,
                                "name": "Literal",
                                "src": "648:1:0"
                              }
                            ],
                            "id": 39,
                            "name": "BinaryOperation",
                            "src": "636:13:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "506c6561736520646f6e61746520612076616c696420616d6f756e74206f6620455448",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Please donate a valid amount of ETH\"",
                              "value": "Please donate a valid amount of ETH"
                            },
                            "id": 40,
                            "name": "Literal",
                            "src": "651:37:0"
                          }
                        ],
                        "id": 41,
                        "name": "FunctionCall",
                        "src": "628:61:0"
                      }
                    ],
                    "id": 42,
                    "name": "ExpressionStatement",
                    "src": "628:61:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 21,
                                  "type": "mapping(address => uint256)",
                                  "value": "userEther"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "699:9:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 44,
                                    "name": "Identifier",
                                    "src": "709:3:0"
                                  }
                                ],
                                "id": 45,
                                "name": "MemberAccess",
                                "src": "709:10:0"
                              }
                            ],
                            "id": 46,
                            "name": "IndexAccess",
                            "src": "699:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 407,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 21,
                                          "type": "mapping(address => uint256)",
                                          "value": "userEther"
                                        },
                                        "id": 47,
                                        "name": "Identifier",
                                        "src": "723:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 48,
                                            "name": "Identifier",
                                            "src": "733:3:0"
                                          }
                                        ],
                                        "id": 49,
                                        "name": "MemberAccess",
                                        "src": "733:10:0"
                                      }
                                    ],
                                    "id": 50,
                                    "name": "IndexAccess",
                                    "src": "723:21:0"
                                  }
                                ],
                                "id": 51,
                                "name": "MemberAccess",
                                "src": "723:25:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 52,
                                    "name": "Identifier",
                                    "src": "749:3:0"
                                  }
                                ],
                                "id": 53,
                                "name": "MemberAccess",
                                "src": "749:9:0"
                              }
                            ],
                            "id": 54,
                            "name": "FunctionCall",
                            "src": "723:36:0"
                          }
                        ],
                        "id": 55,
                        "name": "Assignment",
                        "src": "699:60:0"
                      }
                    ],
                    "id": 56,
                    "name": "ExpressionStatement",
                    "src": "699:60:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3af8b818b46c896fba0b3573f74fefe12530644ad5b14765aea3311a82fcb598",
                                  "typeString": "literal_string \"Something went wrong\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 57,
                            "name": "Identifier",
                            "src": "769:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "mint",
                                  "referencedDeclaration": 207,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 17,
                                      "type": "contract Token",
                                      "value": "token"
                                    },
                                    "id": 58,
                                    "name": "Identifier",
                                    "src": "777:5:0"
                                  }
                                ],
                                "id": 59,
                                "name": "MemberAccess",
                                "src": "777:10:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 60,
                                    "name": "Identifier",
                                    "src": "788:3:0"
                                  }
                                ],
                                "id": 61,
                                "name": "MemberAccess",
                                "src": "788:10:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 62,
                                    "name": "Identifier",
                                    "src": "800:3:0"
                                  }
                                ],
                                "id": 63,
                                "name": "MemberAccess",
                                "src": "800:9:0"
                              }
                            ],
                            "id": 64,
                            "name": "FunctionCall",
                            "src": "777:33:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "536f6d657468696e672077656e742077726f6e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Something went wrong\"",
                              "value": "Something went wrong"
                            },
                            "id": 65,
                            "name": "Literal",
                            "src": "812:22:0"
                          }
                        ],
                        "id": 66,
                        "name": "FunctionCall",
                        "src": "769:66:0"
                      }
                    ],
                    "id": 67,
                    "name": "ExpressionStatement",
                    "src": "769:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 15,
                              "type": "function (address,uint256,uint256)",
                              "value": "donateEtherEvent"
                            },
                            "id": 68,
                            "name": "Identifier",
                            "src": "850:16:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 69,
                                "name": "Identifier",
                                "src": "867:3:0"
                              }
                            ],
                            "id": 70,
                            "name": "MemberAccess",
                            "src": "867:10:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 71,
                                "name": "Identifier",
                                "src": "879:3:0"
                              }
                            ],
                            "id": 72,
                            "name": "MemberAccess",
                            "src": "879:9:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 73,
                                "name": "Identifier",
                                "src": "890:3:0"
                              }
                            ],
                            "id": 74,
                            "name": "MemberAccess",
                            "src": "890:9:0"
                          }
                        ],
                        "id": 75,
                        "name": "FunctionCall",
                        "src": "850:50:0"
                      }
                    ],
                    "id": 76,
                    "name": "EmitStatement",
                    "src": "845:55:0"
                  }
                ],
                "id": 77,
                "name": "Block",
                "src": "618:289:0"
              }
            ],
            "id": 78,
            "name": "FunctionDefinition",
            "src": "580:327:0"
          },
          {
            "attributes": {
              "functionSelector": "327a943a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getUserAmount",
              "scope": 92,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev this function will return the amount of tokens accondingly to the address\n@param userAddress is the donator address"
                },
                "id": 79,
                "name": "StructuredDocumentation",
                "src": "917:130:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "scope": 91,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 80,
                        "name": "ElementaryTypeName",
                        "src": "1075:7:0"
                      }
                    ],
                    "id": 81,
                    "name": "VariableDeclaration",
                    "src": "1075:19:0"
                  }
                ],
                "id": 82,
                "name": "ParameterList",
                "src": "1074:21:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 91,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 83,
                        "name": "ElementaryTypeName",
                        "src": "1116:7:0"
                      }
                    ],
                    "id": 84,
                    "name": "VariableDeclaration",
                    "src": "1116:7:0"
                  }
                ],
                "id": 85,
                "name": "ParameterList",
                "src": "1115:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 85
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "mapping(address => uint256)",
                              "value": "userEther"
                            },
                            "id": 86,
                            "name": "Identifier",
                            "src": "1141:9:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 81,
                              "type": "address",
                              "value": "userAddress"
                            },
                            "id": 87,
                            "name": "Identifier",
                            "src": "1151:11:0"
                          }
                        ],
                        "id": 88,
                        "name": "IndexAccess",
                        "src": "1141:22:0"
                      }
                    ],
                    "id": 89,
                    "name": "Return",
                    "src": "1134:29:0"
                  }
                ],
                "id": 90,
                "name": "Block",
                "src": "1124:46:0"
              }
            ],
            "id": 91,
            "name": "FunctionDefinition",
            "src": "1052:118:0"
          }
        ],
        "id": 92,
        "name": "ContractDefinition",
        "src": "218:954:0"
      }
    ],
    "id": 93,
    "name": "SourceUnit",
    "src": "0:1172:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd12543d96ddD6Cfd65aB0e058CbE3D23a781e4aA",
      "transactionHash": "0xc2439346ce1230bc987d2d97871b5f88547c2eb8c4b160095a3aa84fe640ac34"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-15T10:49:16.938Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Juliano Miyabe",
    "kind": "dev",
    "methods": {
      "donateEther()": {
        "details": "this function will donate ethereum and will mint token to the donator."
      },
      "getUserAmount(address)": {
        "details": "this function will return the amount of tokens accondingly to the address",
        "params": {
          "userAddress": "is the donator address"
        }
      }
    },
    "title": "Contribution contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is used for donate ETH ",
    "version": 1
  }
}